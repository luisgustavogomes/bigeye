package br.com.tbsa.entity;
// Generated 09/05/2018 20:17:25 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProgramasVm generated by hbm2java
 */
@Entity
@Table(name = "PROGRAMAS_VM",
        schema = "dbo",
        catalog = "BIGEYE"
)
public class ProgramasVm implements java.io.Serializable {

    private int idProgramasVm;
    private Programa programa;
    private Vm vm;
    private Date dataInstalacao;
    private Set<ProgramasVmHst> programasVmHsts = new HashSet<ProgramasVmHst>(0);
    private Set<ServicosVm> servicosVms = new HashSet<ServicosVm>(0);

    public ProgramasVm() {
    }

    public ProgramasVm(Programa programa, Vm vm, Date dataInstalacao) {
        this.programa = programa;
        this.vm = vm;
        this.dataInstalacao = dataInstalacao;
    }

    public ProgramasVm(Programa programa, Vm vm) {
        this.programa = programa;
        this.vm = vm;
    }

    public ProgramasVm(int idProgramasVm, Programa programa, Vm vm, Date dataInstalacao) {
        this.idProgramasVm = idProgramasVm;
        this.programa = programa;
        this.vm = vm;
        this.dataInstalacao = dataInstalacao;
    }

    public ProgramasVm(int idProgramasVm, Programa programa, Vm vm, Date dataInstalacao, Set<ProgramasVmHst> programasVmHsts, Set<ServicosVm> servicosVms) {
        this.idProgramasVm = idProgramasVm;
        this.programa = programa;
        this.vm = vm;
        this.dataInstalacao = dataInstalacao;
        this.programasVmHsts = programasVmHsts;
        this.servicosVms = servicosVms;
    }

    @Id

    @Column(name = "ID_PROGRAMAS_VM", unique = true, nullable = false)
    public int getIdProgramasVm() {
        return this.idProgramasVm;
    }

    public void setIdProgramasVm(int idProgramasVm) {
        this.idProgramasVm = idProgramasVm;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_PROGRAMA", nullable = false)
    public Programa getPrograma() {
        return this.programa;
    }

    public void setPrograma(Programa programa) {
        this.programa = programa;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ID_VM", nullable = false)
    public Vm getVm() {
        return this.vm;
    }

    public void setVm(Vm vm) {
        this.vm = vm;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DATA_INSTALACAO", nullable = false, length = 23)
    public Date getDataInstalacao() {
        return this.dataInstalacao;
    }

    public void setDataInstalacao(Date dataInstalacao) {
        this.dataInstalacao = dataInstalacao;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "programasVm")
    public Set<ProgramasVmHst> getProgramasVmHsts() {
        return this.programasVmHsts;
    }

    public void setProgramasVmHsts(Set<ProgramasVmHst> programasVmHsts) {
        this.programasVmHsts = programasVmHsts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "programasVm")
    public Set<ServicosVm> getServicosVms() {
        return this.servicosVms;
    }

    public void setServicosVms(Set<ServicosVm> servicosVms) {
        this.servicosVms = servicosVms;
    }

    @Override
    public String toString() {
        return programa.toString();
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 83 * hash + Objects.hashCode(this.programa);
        hash = 83 * hash + Objects.hashCode(this.vm);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ProgramasVm other = (ProgramasVm) obj;
        if (!Objects.equals(this.programa, other.programa)) {
            return false;
        }
        if (!Objects.equals(this.vm, other.vm)) {
            return false;
        }
        return true;
    }

}
